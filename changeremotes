#!/bin/bash

usage() {
	echo "Usage: $(basename $0) [OPTION]... DIRECTORY..."
	echo
	echo "Options:"
	echo "  -f, --fetch       also change fetch urls (default is to change only puh urls)"
	echo "  -F, --fetch-only  only change fetch urls"
	echo "  -h, --help        print this help message"
	echo "  -H, --https       change remotes to https"
	echo "  -s, --ssh         change remotes to ssh (default)"
	echo "  -v, --verbose     increase verbosity"
	echo "  -q, --quiet       decrease verbosity"
}

#Defaults
UPDATEPUSH=true
UPDATEFETCH=false
PROTOCOL=ssh
VERBOSITY=1

# Parse commandline options
while [[ -n $1 ]]; do
	case "$1" in
		--fetch)   UPDATEFETCH=true ;;
		--fetch-only)
			UPDATEFETCH=true
			UPDATEPUSH=false
			;;
		--help)    usage; exit 0 ;;
		--https)   PROTOCOL=https ;;
		--ssh)     PROTOCOL=ssh ;;
		--quiet)   ((VERBOSITY--)) ;;
		--verbose) ((VERBOSITY++)) ;;
		-*)
			while read -n 1 opt; do
				case "$opt" in
					f)  UPDATEFETCH=true ;;
					F)
						UPDATEFETCH=true
						UPDATEPUSH=false
						;;
					h)  usage; exit 0 ;;
					H)  PROTOCOL=https ;;
					s)  PROTOCOL=ssh ;;
					q)  ((VERBOSITY--)) ;;
					v)  ((VERBOSITY++)) ;;
					"") ;;
					*)
						echo "-$opt: unknown option"
						echo "See $(basename $0) --help for help"
						exit 1
				esac
			done <<< "${1:1}"
			;;
		*) DIRS+=" $(realpath $1)"
	esac
	shift
done

if [[ -z $DIRS ]]; then
	usage
	exit 1
fi

REPOS=
for DIR in $DIRS; do
	r=$(find $DIR -name '.git' 2>/dev/null -exec realpath '{}' + | \
			sed -e 's/\/\.git//')
	REPOS+="$r "
	if [[ $VERBOSITY -ge 3 ]]; then
		echo "Looking for repos in $DIR"
		for d in $r; do
			echo "Found $d"
		done
	fi
done

for REPODIR in $REPOS; do
	cd $REPODIR
	REMOTES=$(git remote -v)
	[[ $VERBOSITY -ge 2 ]] && echo "Entering $REPODIR"

	IFS=$'\n'
	DONESOMETHING=false
	for REMOTE in $REMOTES; do
		REMOTENAME=$(echo $REMOTE | awk '{print $1}')
		URL=$(echo $REMOTE | awk '{print $2}')
		TYPE=$(echo $REMOTE | awk '{print $3}')
		USERNAME=$(echo $URL | cut -d '/' -f 4)
		REPONAME=$(echo $URL | cut -d '/' -f 5)
		FETCHURL=
		PUSHURL=

		if [[ $URL =~ ^http(s)?://github.com/ && $PROTOCOL == "ssh" ]]; then
			if [[ $TYPE == "(fetch)" && $UPDATEFETCH == true ]]; then
				FETCHURL="ssh://git@github.com/$USERNAME/$REPONAME"
			fi
			if [[ $TYPE == "(push)" && $UPDATEPUSH == true ]]; then
				PUSHURL="ssh://git@github.com/$USERNAME/$REPONAME"
			fi
		elif [[ $URL =~ ^ssh://git@github.com/ && $PROTOCOL == "https" ]]; then
			if [[ $TYPE == "(fetch)" && $UPDATEFETCH == true ]]; then
				FETCHURL="https://github.com/$USERNAME/$REPONAME"
			fi
			if [[ $TYPE == "(push)" && $UPDATEPUSH == true ]]; then
				PUSHURL="https://github.com/$USERNAME/$REPONAME"
			fi
		fi

		if [[ ! -z $FETCHURL ]]; then
			[[ $VERBOSITY -ge 1 ]] && echo "Changing fetch url for $REPONAME $REMOTENAME to $FETCHURL"
			DONESOMETHING=true
			git remote set-url $REMOTENAME $FETCHURL
		fi
		if [[ ! -z $PUSHURL ]]; then
			[[ $VERBOSITY -ge 1 ]] && echo "Changing push url for $REPONAME $REMOTENAME to $PUSHURL"
			DONESOMETHING=true
			git remote set-url --push $REMOTENAME $PUSHURL
		fi
	done
	[[ "$DONESOMETHING" == false ]] && echo "Nothing to do for $REPODIR"
done
